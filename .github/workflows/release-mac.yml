on:
  push:
    tags:
      - 'mac-v*'

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@master

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build -DACTIONS=TRUE
      
    - name: Install Boost Lib
      run: HOMEBREW_NO_AUTO_UPDATE=1 brew install boost
      
    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake ../vimeo_download/CMakeLists.txt -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run:
       cmake --build ../vimeo_download  --prefix ${{github.workspace}}/build --config $BUILD_TYPE

    - name: zipping
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: zip ${{github.workspace}}/vimeo_download/download_vimeo.zip ${{github.workspace}}/vimeo_download/download_vimeo
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: add binray
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{github.workspace}}/vimeo_download/download_vimeo.zip
        asset_name: download_vimeo.zip
        asset_content_type: application/zip